# ==============================
# Postgres (optional, falls du DB nutzt)
# ==============================
spring.application.name=tracer-backend
server.port=8080

# ==============================
# Actuator
# ==============================
management.endpoints.web.exposure.include=health,metrics,prometheus
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.endpoint.health.show-details=always
management.metrics.distribution.percentiles.all=0.5,0.95,0.99

# ==============================
# Postgres
# ==============================
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/trace_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ==============================
# Kafka
# ==============================
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP:localhost:9092}
spring.kafka.consumer.group-id=tracer-service-v2
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=de.tim.tracerbackend.dto.TraceDto
spring.kafka.consumer.properties.spring.json.trusted.packages=*